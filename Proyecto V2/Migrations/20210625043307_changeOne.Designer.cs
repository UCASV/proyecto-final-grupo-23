// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto_V2;

namespace Proyecto_V2.Migrations
{
    [DbContext(typeof(ProyectoContext))]
    [Migration("20210625043307_changeOne")]
    partial class changeOne
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("Proyecto_V2.Cabin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Adress")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("adress");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Mandated")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mandated");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.ToTable("cabin");
                });

            modelBuilder.Entity("Proyecto_V2.Cabinxemployee", b =>
                {
                    b.Property<int>("IdCabin")
                        .HasColumnType("int")
                        .HasColumnName("id_cabin");

                    b.Property<int>("IdEmployee")
                        .HasColumnType("int")
                        .HasColumnName("id_employee");

                    b.HasKey("IdCabin", "IdEmployee")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdEmployee" }, "fk_cabinXemployee_employee");

                    b.ToTable("cabinxemployee");
                });

            modelBuilder.Entity("Proyecto_V2.Disease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Disease1")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("disease");

                    b.HasKey("Id");

                    b.ToTable("disease");
                });

            modelBuilder.Entity("Proyecto_V2.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Adress")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("adress");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<int?>("IdTypeEmployee")
                        .HasColumnType("int")
                        .HasColumnName("id_type_employee");

                    b.Property<string>("NameEmployee")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name_employee");

                    b.Property<string>("PasswordEmployee")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password_employee");

                    b.Property<string>("UserEmployee")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_employee");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdTypeEmployee" }, "id_type_employee");

                    b.ToTable("employee");
                });

            modelBuilder.Entity("Proyecto_V2.GroupPriority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Groupp")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("groupp");

                    b.HasKey("Id");

                    b.ToTable("group_priority");
                });

            modelBuilder.Entity("Proyecto_V2.Pacient", b =>
                {
                    b.Property<string>("Dui")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DUI");

                    b.Property<string>("AdressPacient")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("adress_pacient");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<int?>("IdDisease")
                        .HasColumnType("int")
                        .HasColumnName("id_Disease");

                    b.Property<int?>("IdGroupPriority")
                        .HasColumnType("int")
                        .HasColumnName("id_group_priority");

                    b.Property<int?>("IdTypeInstitution")
                        .HasColumnType("int")
                        .HasColumnName("id_type_institution");

                    b.Property<string>("NamePacient")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name_pacient");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("phone");

                    b.HasKey("Dui")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdDisease" }, "id_Disease");

                    b.HasIndex(new[] { "IdGroupPriority" }, "id_group_priority");

                    b.HasIndex(new[] { "IdTypeInstitution" }, "id_type_institution");

                    b.ToTable("pacient");
                });

            modelBuilder.Entity("Proyecto_V2.Quotee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateVaccine")
                        .HasColumnType("date")
                        .HasColumnName("date_vaccine");

                    b.Property<string>("DuiPacient")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DUI_pacient");

                    b.Property<int?>("IdCabin")
                        .HasColumnType("int")
                        .HasColumnName("id_cabin");

                    b.Property<string>("PlaceVaccination")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("place_vaccination");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DuiPacient" }, "DUI_pacient");

                    b.HasIndex(new[] { "IdCabin" }, "id_cabin");

                    b.ToTable("quotee");
                });

            modelBuilder.Entity("Proyecto_V2.Record", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateRecord")
                        .HasColumnType("date")
                        .HasColumnName("date_record");

                    b.Property<int?>("IdCabin")
                        .HasColumnType("int")
                        .HasColumnName("id_cabin");

                    b.Property<int?>("IdEmployee")
                        .HasColumnType("int")
                        .HasColumnName("id_employee");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdCabin" }, "id_cabin")
                        .HasDatabaseName("id_cabin1");

                    b.HasIndex(new[] { "IdEmployee" }, "id_employee");

                    b.ToTable("record");
                });

            modelBuilder.Entity("Proyecto_V2.SideEffect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("SideEffects")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("side_effects");

                    b.HasKey("Id");

                    b.ToTable("side_effects");
                });

            modelBuilder.Entity("Proyecto_V2.TypeEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Typee")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("typee");

                    b.HasKey("Id");

                    b.ToTable("type_employee");
                });

            modelBuilder.Entity("Proyecto_V2.TypeInstitution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Typee")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("typee");

                    b.HasKey("Id");

                    b.ToTable("type_institution");
                });

            modelBuilder.Entity("Proyecto_V2.Vaccination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateVaccine")
                        .HasColumnType("date")
                        .HasColumnName("date_vaccine");

                    b.Property<int?>("IdCabin")
                        .HasColumnType("int")
                        .HasColumnName("id_cabin");

                    b.Property<int?>("IdSideEffects")
                        .HasColumnType("int")
                        .HasColumnName("id_Side_effects");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdSideEffects" }, "id_Side_effects");

                    b.HasIndex(new[] { "IdCabin" }, "id_cabin")
                        .HasDatabaseName("id_cabin2");

                    b.ToTable("vaccination");
                });

            modelBuilder.Entity("Proyecto_V2.Cabinxemployee", b =>
                {
                    b.HasOne("Proyecto_V2.Cabin", "IdCabinNavigation")
                        .WithMany("Cabinxemployees")
                        .HasForeignKey("IdCabin")
                        .HasConstraintName("FK_cabinxemployee_cabin")
                        .IsRequired();

                    b.HasOne("Proyecto_V2.Employee", "IdEmployeeNavigation")
                        .WithMany("Cabinxemployees")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("fk_cabinXemployee_employee")
                        .IsRequired();

                    b.Navigation("IdCabinNavigation");

                    b.Navigation("IdEmployeeNavigation");
                });

            modelBuilder.Entity("Proyecto_V2.Employee", b =>
                {
                    b.HasOne("Proyecto_V2.TypeEmployee", "IdTypeEmployeeNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("IdTypeEmployee")
                        .HasConstraintName("employee_ibfk_1");

                    b.Navigation("IdTypeEmployeeNavigation");
                });

            modelBuilder.Entity("Proyecto_V2.Pacient", b =>
                {
                    b.HasOne("Proyecto_V2.Disease", "IdDiseaseNavigation")
                        .WithMany("Pacients")
                        .HasForeignKey("IdDisease")
                        .HasConstraintName("pacient_ibfk_1");

                    b.HasOne("Proyecto_V2.GroupPriority", "IdGroupPriorityNavigation")
                        .WithMany("Pacients")
                        .HasForeignKey("IdGroupPriority")
                        .HasConstraintName("pacient_ibfk_3");

                    b.HasOne("Proyecto_V2.TypeInstitution", "IdTypeInstitutionNavigation")
                        .WithMany("Pacients")
                        .HasForeignKey("IdTypeInstitution")
                        .HasConstraintName("pacient_ibfk_2");

                    b.Navigation("IdDiseaseNavigation");

                    b.Navigation("IdGroupPriorityNavigation");

                    b.Navigation("IdTypeInstitutionNavigation");
                });

            modelBuilder.Entity("Proyecto_V2.Quotee", b =>
                {
                    b.HasOne("Proyecto_V2.Pacient", "DuiPacientNavigation")
                        .WithMany("Quotees")
                        .HasForeignKey("DuiPacient")
                        .HasConstraintName("quotee_ibfk_2");

                    b.HasOne("Proyecto_V2.Cabin", "IdCabinNavigation")
                        .WithMany("Quotees")
                        .HasForeignKey("IdCabin")
                        .HasConstraintName("quotee_ibfk_1");

                    b.Navigation("DuiPacientNavigation");

                    b.Navigation("IdCabinNavigation");
                });

            modelBuilder.Entity("Proyecto_V2.Record", b =>
                {
                    b.HasOne("Proyecto_V2.Cabin", "IdCabinNavigation")
                        .WithMany("Records")
                        .HasForeignKey("IdCabin")
                        .HasConstraintName("record_ibfk_1");

                    b.HasOne("Proyecto_V2.Employee", "IdEmployeeNavigation")
                        .WithMany("Records")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("record_ibfk_2");

                    b.Navigation("IdCabinNavigation");

                    b.Navigation("IdEmployeeNavigation");
                });

            modelBuilder.Entity("Proyecto_V2.Vaccination", b =>
                {
                    b.HasOne("Proyecto_V2.Cabin", "IdCabinNavigation")
                        .WithMany("Vaccinations")
                        .HasForeignKey("IdCabin")
                        .HasConstraintName("vaccination_ibfk_1");

                    b.HasOne("Proyecto_V2.SideEffect", "IdSideEffectsNavigation")
                        .WithMany("Vaccinations")
                        .HasForeignKey("IdSideEffects")
                        .HasConstraintName("vaccination_ibfk_2");

                    b.Navigation("IdCabinNavigation");

                    b.Navigation("IdSideEffectsNavigation");
                });

            modelBuilder.Entity("Proyecto_V2.Cabin", b =>
                {
                    b.Navigation("Cabinxemployees");

                    b.Navigation("Quotees");

                    b.Navigation("Records");

                    b.Navigation("Vaccinations");
                });

            modelBuilder.Entity("Proyecto_V2.Disease", b =>
                {
                    b.Navigation("Pacients");
                });

            modelBuilder.Entity("Proyecto_V2.Employee", b =>
                {
                    b.Navigation("Cabinxemployees");

                    b.Navigation("Records");
                });

            modelBuilder.Entity("Proyecto_V2.GroupPriority", b =>
                {
                    b.Navigation("Pacients");
                });

            modelBuilder.Entity("Proyecto_V2.Pacient", b =>
                {
                    b.Navigation("Quotees");
                });

            modelBuilder.Entity("Proyecto_V2.SideEffect", b =>
                {
                    b.Navigation("Vaccinations");
                });

            modelBuilder.Entity("Proyecto_V2.TypeEmployee", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Proyecto_V2.TypeInstitution", b =>
                {
                    b.Navigation("Pacients");
                });
#pragma warning restore 612, 618
        }
    }
}
